{
  "extends": [
    "standard-with-typescript",
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json"
  },
  "plugins": ["prettier", "@typescript-eslint", "eslint-plugin-import-helpers"],
  "rules": {
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/space-before-function-paren": "off",
    "@typescript-eslint/strict-boolean-expressions": "off",
    "@typescript-eslint/no-throw-literal": "off",
    "@typescript-eslint/no-floating-promises": "off",
    "@typescript-eslint/restrict-template-expressions": "off",
    "@typescript-eslint/naming-convention": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/no-misused-promises": [
      "error",
      {
        "checksVoidReturn": false
      }
    ],
    "import-helpers/order-imports": [
      "warn",
      {
        "newlinesBetween": "always",
        "groups": ["module", "/^@//", ["parent", "sibling", "index"]],
        "alphabetize": { "order": "asc", "caseInsensitive": true }
      }
    ],
    "padding-line-between-statements": [
      "error",
      // wildcard inclusions
      {
        "blankLine": "always",
        "prev": [
          "multiline-block-like",
          "multiline-const",
          "multiline-expression"
        ],
        "next": "*"
      },
      {
        "blankLine": "always",
        "prev": "*",
        "next": [
          "multiline-block-like",
          "multiline-const",
          "multiline-expression",
          "switch",
          "return"
        ]
      },
      // specific exclusions for case statements
      { "blankLine": "never", "prev": "case", "next": "multiline-block-like" },
      { "blankLine": "never", "prev": "multiline-block-like", "next": "case" }
    ]
  }
}
